generator client {
  provider = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  phone         String    @unique
  password      String?
  name          String?
  avatar        String?
  status        Int       @default(1) // 1: active, 0: inactive
  lastLoginAt   DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  roles         Role[]    @relation("UserToRole")
  verificationCodes VerificationCode[]
  conversations Conversation[]
  refreshTokens RefreshToken[]
  files         File[]
}

model Role {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  users       User[]    @relation("UserToRole")
  permissions Permission[] @relation("RoleToPermission")
}

model Permission {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  roles       Role[]    @relation("RoleToPermission")
}

model VerificationCode {
  id        String   @id @default(cuid())
  phone     String
  code      String
  type      Int      // 1: login, 2: register, 3: reset password
  status    Int      @default(1) // 1: unused, 0: used
  expiresAt DateTime
  createdAt DateTime @default(now())

  // Relations
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Conversation {
  id        String   @id @default(cuid())
  title     String?  @default("未命名")
  createdBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  messages  Json     @default("[]")
  context   Json?
  user      User     @relation(fields: [createdBy], references: [id])

  @@index([createdBy])
}

model File {
  id          String   @id @default(cuid())
  fileName    String
  fileType    String
  fileUrl     String
  fileSize    Int      // Size in bytes
  mimeType    String
  fileKey     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String
  status      Int      @default(1) // 1: active, 0: deleted

  // Relations
  user        User     @relation(fields: [createdBy], references: [id])

  @@index([createdBy])
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User     @relation(fields: [userId], references: [id])
  userId    String

  @@index([userId])
  @@index([token])
}
